if not game:IsLoaded() then
	game.Loaded:wait() 
end

-- extra credits to twink marie
local library = {}
local request = request or http_request or (identifyexecutor() == "Synapse X" and syn.request) or (http and http.request)
loadstring(request({Url="https://raw.githubusercontent.com/cypherdh/Script-Library/main/InstanceProtect",Method="GET"}).Body)()
local UIS = game:GetService("UserInputService")
local TS = game:GetService("TweenService")
function library:CreateWindow(name, version, icon)
	name = name or "Name"
	version = version or "Version"
	icon = icon or math.random()
	local MyGui = Instance.new("ScreenGui")
	local Window = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local TitleBar = Instance.new("Frame")
	local Icon = Instance.new("ImageLabel")
	local MainTitle = Instance.new("TextLabel")
	local TitleUnderline = Instance.new("Frame")
	local UIGradient = Instance.new("UIGradient")
	local Bar = Instance.new("Frame")
	local Bar_2 = Instance.new("Frame")
	local Close = Instance.new("ImageButton")
	local Minimize = Instance.new("ImageButton")
	local _4pxShadow2px_2 = Instance.new("ImageLabel")

	local RandomString = ""
	for i = 1, math.random(3,20) do
		RandomString = RandomString..string.char(math.random(97,122))
	end
	ProtectInstance(MyGui)
	ProtectInstance(Window)
-- Assuming MyGui is already defined and parented somewhere above this code

-- Create a button to toggle MyGui visibility


-- Function to toggle MyGui visibility
local function ToggleVisibility()
     
    if Window.Size == UDim2.new(0, 0, 0, 0) then
        Window.Size = UDim2.new(0, 600,0, 400)
        ToggleHideButton.Text = "Hide"
        
    else
    Window.Size = UDim2.new(0, 0, 0, 0)
        ToggleHideButton.Text = "Show"
        
    end
end

-- Connect the toggle function to the button click event
UIS.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.G then -- the keycode is r (pressing r)
      ToggleVisibility()
    end
end)


	MyGui.Name = RandomString
	MyGui.Parent = cloneref(game:GetService("CoreGui"))
	MyGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Window.Name = "Window"
	Window.Parent = MyGui
	Window.BackgroundColor3 = Color3.fromRGB(49, 49, 59)
	Window.Position = UDim2.new(0.5, -300, 0.600000024, -200)
	Window.Size = UDim2.new(0, 0, 0, 0)
	Window.ClipsDescendants = true

	UICorner.CornerRadius = UDim.new(0, 4)
	UICorner.Parent = Window

	TitleBar.Name = "TitleBar"
	TitleBar.Parent = Window
	TitleBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TitleBar.BackgroundTransparency = 1.000
	TitleBar.Size = UDim2.new(1, 0, 0, 30)

	Icon.Name = "Icon"
	Icon.Parent = TitleBar
	Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Icon.BackgroundTransparency = 1.000
	Icon.Position = UDim2.new(0, 6, 0, 6)
	Icon.Size = UDim2.new(0, 18, 0, 18)
	Icon.Image = "rbxassetid://"..icon
	Icon.ImageColor3 = Color3.fromRGB(135, 255, 135)

	MainTitle.Name = "Title"
	MainTitle.Parent = TitleBar
	MainTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	MainTitle.BackgroundTransparency = 1.000
	MainTitle.Position = UDim2.new(0, 30, 0, 1)
	MainTitle.Size = UDim2.new(1, -30, 1, 0)
	MainTitle.Font = Enum.Font.Gotham
	MainTitle.Text = name.." | "..version --"Title | Version"
	MainTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
	MainTitle.TextSize = 12.000
	MainTitle.TextXAlignment = Enum.TextXAlignment.Left

	TitleUnderline.Name = "TitleUnderline"
	TitleUnderline.Parent = TitleBar
	TitleUnderline.BackgroundColor3 = Color3.fromRGB(135, 255, 135)
	TitleUnderline.BorderSizePixel = 0
	TitleUnderline.Position = UDim2.new(0, 0, 1, 0)
	TitleUnderline.Size = UDim2.new(1, 0, 0, 1)

	UIGradient.Parent = TitleUnderline

	Bar.Name = "Bar"
	Bar.Parent = TitleUnderline
	Bar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Bar.BackgroundTransparency = 0.750
	Bar.BorderSizePixel = 0
	Bar.Position = UDim2.new(0, 6, 0, 0)
	Bar.Size = UDim2.new(0, 18, 1, 0)

	Bar_2.Name = "Bar"
	Bar_2.Parent = TitleUnderline
	Bar_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Bar_2.BackgroundTransparency = 0.750
	Bar_2.BorderSizePixel = 0
	Bar_2.Position = UDim2.new(1, -24, 0, 0)
	Bar_2.Size = UDim2.new(0, 18, 1, 0)

	Close.Name = "Close"
	Close.Parent = TitleBar
	Close.BackgroundTransparency = 1.000
	Close.Position = UDim2.new(0.953333378, 0, 0.0666666627, 0)
	Close.Size = UDim2.new(0, 25, 0, 25)
	Close.ZIndex = 2
	Close.Image = "rbxassetid://3926305904"
	Close.ImageRectOffset = Vector2.new(284, 4)
	Close.ImageRectSize = Vector2.new(24, 24)

	Minimize.Name = "Minimize"
	Minimize.Parent = TitleBar
	Minimize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Minimize.BackgroundTransparency = 1.000
	Minimize.Position = UDim2.new(0.953, -24, -0.2, 6)
	Minimize.Size = UDim2.new(0, 26, 0, 30)
	Minimize.Image = "http://www.roblox.com/asset/?id=6035067836"

	_4pxShadow2px_2.Name = "4pxShadow(2px)"
	_4pxShadow2px_2.Parent = Window
	_4pxShadow2px_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	_4pxShadow2px_2.BackgroundTransparency = 1.000
	_4pxShadow2px_2.Position = UDim2.new(0, -15, 0, -15)
	_4pxShadow2px_2.Selectable = true
	_4pxShadow2px_2.Size = UDim2.new(1, 30, 1, 30)
	_4pxShadow2px_2.Image = "http://www.roblox.com/asset/?id=5761504593"
	_4pxShadow2px_2.ImageColor3 = Color3.fromRGB(49, 49, 59)
	_4pxShadow2px_2.ImageTransparency = 0.300
	_4pxShadow2px_2.ScaleType = Enum.ScaleType.Slice
	_4pxShadow2px_2.SliceCenter = Rect.new(17, 17, 283, 283)

	Close.MouseButton1Click:Connect(function()
		TS:Create(Window, TweenInfo.new(0.5), {Size = UDim2.new(0, 600, 0, 0)}):Play()
		repeat
			wait()
		until Window.Size == UDim2.new(0, 600, 0, 0)
		wait(0.1)
		TS:Create(Window, TweenInfo.new(0.5), {Size = UDim2.new(0, 0, 0, 0)}):Play()
		repeat
			wait()
		until Window.Size == UDim2.new(0, 0, 0, 0)
		MyGui:Remove()
	end)

	Minimize.MouseButton1Click:Connect(function()
		if not MinimizeGui then
			MinimizeGui = true
			if Window.Size == UDim2.new(0, 600,0, 400) then
				TS:Create(Window, TweenInfo.new(0.25), {Size = UDim2.new(0, 600,0, 32)}):Play()
				repeat wait() until Window.Size == UDim2.new(0, 600,0, 32)
				if Page and Page.Visible == true then
					Page.Visible = false
				end
				if Tabs and Tabs.Visible == true then
					Tabs.Visible = false
				end
			end
		else
			MinimizeGui = false
			if Window.Size == UDim2.new(0, 600,0, 32) then
				if Page and Page.Visible == true then
					Page.Visible = false
				end
				if Tabs and Tabs.Visible == true then
					Tabs.Visible = false
				end
				TS:Create(Window, TweenInfo.new(0.25), {Size = UDim2.new(0, 600,0, 400)}):Play()
			end
		end
	end)


	
-- Dragify function
function dragify(Frame)
	local dragToggle = nil
	local dragInput = nil
	local dragStart = nil
	local startPos = nil

	local function updateInput(input)
		local Delta = input.Position - dragStart
		local Position = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + Delta.X,
			startPos.Y.Scale, startPos.Y.Offset + Delta.Y
		)
		TS:Create(Frame, TweenInfo.new(0.25), {Position = Position}):Play()
	end

	Frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
			dragToggle = true
			dragStart = input.Position
			startPos = Frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	Frame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if input == dragInput and dragToggle then
			updateInput(input)
		end
	end)
end





	dragify(Window)
	TS:Create(Window, TweenInfo.new(0.5), {Size = UDim2.new(0, 600, 0, 0)}):Play()
	repeat wait() until Window.Size == UDim2.new(0, 600, 0, 0)
	wait(0.1)
	TS:Create(Window, TweenInfo.new(0.5), {Size = UDim2.new(0, 600, 0, 400)}):Play()

	--end
	local tabs = {}

	function tabs:CreateTab(name)
		name = name or "Section 1"
		--Create Tab
		local Tabs = Instance.new("Frame")
		local UICorner_2 = Instance.new("UICorner")
		local SectionLabel = Instance.new("TextLabel")
		local UIListLayout = Instance.new("UIListLayout")
		--local PageButton = Instance.new("TextButton") --LATER
		local Indicator = Instance.new("Frame")

		Tabs.Name = "Tabs"
		Tabs.Parent = Window
		Tabs.BackgroundColor3 = Color3.fromRGB(40, 40, 48)
		Tabs.Position = UDim2.new(0, 5, 0, 36)
		Tabs.Size = UDim2.new(0, 140, 1, -41)

		UICorner_2.CornerRadius = UDim.new(0, 4)
		UICorner_2.Parent = Tabs

		SectionLabel.Name = "SectionLabel"
		SectionLabel.Parent = Tabs
		SectionLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		SectionLabel.BackgroundTransparency = 1.000
		SectionLabel.Position = UDim2.new(0, 7, 0, 0)
		SectionLabel.Size = UDim2.new(1, -7, 0, 30)
		SectionLabel.Font = Enum.Font.GothamBlack
		SectionLabel.Text = name --"Section 1"
		SectionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		SectionLabel.TextSize = 12.000
		SectionLabel.TextXAlignment = Enum.TextXAlignment.Left

		UIListLayout.Parent = Tabs
		UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

		--LATER
		--[[PageButton.Name = "PageButton"
		PageButton.Parent = Tabs
		PageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		PageButton.BackgroundTransparency = 1.000
		PageButton.Size = UDim2.new(1, -14, 0, 20)
		PageButton.Font = Enum.Font.Gotham
		PageButton.Text = "Page 1"
		PageButton.TextColor3 = Color3.fromRGB(255, 255, 255)
		PageButton.TextSize = 12.000
		PageButton.TextXAlignment = Enum.TextXAlignment.Left]]

		Indicator.Name = "Indicator"
		Indicator.Parent = Tabs
		Indicator.BackgroundColor3 = Color3.fromRGB(135, 255, 135)
		Indicator.BorderSizePixel = 0
		Indicator.BackgroundTransparency = 1
		Indicator.Position = UDim2.new(0, -14, 0, 4)
		Indicator.Size = UDim2.new(0, 2, 1, -8)
		Indicator.Visible = false
		--end
		local mytabbuttons = {}
		function mytabbuttons:CreateFrame(name)
			name = name or "Page 1"
			--Creating Page

			local Page = Instance.new("ScrollingFrame")
			local UICorner_3 = Instance.new("UICorner")
			local UIListLayout_2 = Instance.new("UIListLayout")
			local UIPadding = Instance.new("UIPadding")
			local SearchBar = Instance.new("Frame")
			local UICorner_4 = Instance.new("UICorner")
			local SearchIcon = Instance.new("ImageLabel")
			local Bar_3 = Instance.new("Frame")
			local SearchBox = Instance.new("TextBox")
			local Section = Instance.new("Frame")
			local UICorner_5 = Instance.new("UICorner")
			local SectionContainer = Instance.new("Frame")

			local Header = Instance.new("Frame")
			local UICorner_23 = Instance.new("UICorner")
			local UIGradient_2 = Instance.new("UIGradient")
			local _4pxShadow2px_2 = Instance.new("ImageLabel")


			Page.Name = "Page"
			Page.Parent = Window
			Page.Active = true
			Page.BackgroundColor3 = Color3.fromRGB(40, 40, 48)
			Page.BorderColor3 = Color3.fromRGB(27, 42, 53)
			Page.BorderSizePixel = 0
			Page.Position = UDim2.new(0, 150, 0, 36)
			Page.Size = UDim2.new(1, -155, 1, -41)
			Page.ScrollBarThickness = 5
			Page.ScrollBarImageColor3 = Color3.fromRGB(135, 255, 135)
			Page.AutomaticCanvasSize = "Y"
			Page.Visible = false

			UICorner_3.CornerRadius = UDim.new(0, 4)
			UICorner_3.Parent = Page

			UIListLayout_2.Parent = Page
			UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
			UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
			UIListLayout_2.Padding = UDim.new(0, 4)

			UIPadding.Parent = Page
			UIPadding.PaddingBottom = UDim.new(0, 4)
			UIPadding.PaddingLeft = UDim.new(0, 4)
			UIPadding.PaddingRight = UDim.new(0, 4)
			UIPadding.PaddingTop = UDim.new(0, 4)

			SearchBar.Name = "SearchBar"
			SearchBar.Parent = Page
			SearchBar.BackgroundColor3 = Color3.fromRGB(30, 30, 36)
			SearchBar.Size = UDim2.new(1, 0, 0, 30)

			UICorner_4.CornerRadius = UDim.new(0, 4)
			UICorner_4.Parent = SearchBar

			SearchIcon.Name = "SearchIcon"
			SearchIcon.Parent = SearchBar
			SearchIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SearchIcon.BackgroundTransparency = 1.000
			SearchIcon.Position = UDim2.new(0, 6, 0, 6)
			SearchIcon.Size = UDim2.new(0, 18, 0, 18)
			SearchIcon.Image = "rbxassetid://10045418551"
			SearchIcon.ImageColor3 = Color3.fromRGB(135, 255, 135)

			Bar_3.Name = "Bar"
			Bar_3.Parent = SearchBar
			Bar_3.BackgroundColor3 = Color3.fromRGB(135, 255, 135)
			Bar_3.Position = UDim2.new(0, 30, 0, 10)
			Bar_3.Size = UDim2.new(0, 1, 1, -20)

			SearchBox.Name = "SearchBox"
			SearchBox.Parent = SearchBar
			SearchBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SearchBox.BackgroundTransparency = 1.000
			SearchBox.Position = UDim2.new(0, 40, 0, 1)
			SearchBox.Size = UDim2.new(1, -40, 1, 0)
			SearchBox.Font = Enum.Font.Gotham
			SearchBox.PlaceholderColor3 = Color3.fromRGB(227, 225, 228)
			SearchBox.PlaceholderText = "Search Here"
			SearchBox.Text = ""
			SearchBox.TextColor3 = Color3.fromRGB(227, 225, 228)
			SearchBox.TextSize = 12.000
			SearchBox.TextXAlignment = Enum.TextXAlignment.Left

			Section.Name = "Section"
			Section.Parent = Page
			Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Section.BackgroundTransparency = 1.000
			Section.BorderSizePixel = 0
			Section.Position = UDim2.new(0.0170000363, 0, 0.0968660116, 0)
			Section.Size = UDim2.new(0.966000021, 0, 0.159766689, 117)

			UICorner_5.CornerRadius = UDim.new(0, 4)
			UICorner_5.Parent = Section

			SectionContainer.Name = "SectionContainer"
			SectionContainer.Parent = Section
			SectionContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 36)
			SectionContainer.BorderSizePixel = 0
			SectionContainer.ClipsDescendants = true
			SectionContainer.Position = UDim2.new(0, 0, 1.25310734e-07, 0)
			SectionContainer.Size = UDim2.new(1, 0, 1.0033654, -1)
			SectionContainer.ZIndex = 2

			Header.Name = "Header"
			Header.Parent = Section
			Header.BackgroundColor3 = Color3.fromRGB(135, 255, 135)
			Header.BorderSizePixel = 0
			Header.Size = UDim2.new(1, 0, 0, 8)

			UICorner_23.CornerRadius = UDim.new(0, 4)
			UICorner_23.Parent = Header

			UIGradient_2.Transparency = NumberSequence.new{NumberSequenceKeypoint.new(0.00, 0.75), NumberSequenceKeypoint.new(0.50, 0.00), NumberSequenceKeypoint.new(1.00, 0.75)}
			UIGradient_2.Parent = Header

			local UIPadding_2 = Instance.new("UIPadding")
			local UIListLayout_3 = Instance.new("UIListLayout")
			local UICorner_8 = Instance.new("UICorner")

			UIPadding_2.Parent = SectionContainer
			UIPadding_2.PaddingBottom = UDim.new(0, 4)
			UIPadding_2.PaddingLeft = UDim.new(0, 4)
			UIPadding_2.PaddingRight = UDim.new(0, 4)
			UIPadding_2.PaddingTop = UDim.new(0, 4)

			UIListLayout_3.Archivable = false
			UIListLayout_3.Parent = SectionContainer
			UIListLayout_3.HorizontalAlignment = Enum.HorizontalAlignment.Center
			UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
			UIListLayout_3.Padding = UDim.new(0, 4)

			UICorner_8.CornerRadius = UDim.new(0, 4)
			UICorner_8.Parent = SectionContainer
			--End

			function UpdateResults()
				local search = string.lower(SearchBox.Text)
				for i, v in	 pairs(SectionContainer:GetChildren()) do
					if v:IsA("Frame") then
						if search ~= "" then
							if v.Name == "Button" then
								local item = string.lower(v.Title.Text)
								if string.find(item, search) then
									v.Visible = true
								else
									v.Visible = false
								end
							elseif v.Name == "Label" then
								local item = string.lower(v.LabelContent.Text)
								if string.find(item, search) then
									v.Visible = true
								else
									v.Visible = false
								end
							elseif v.Name == "Slider" then
								local item = string.lower(v.Title.Text)
								if string.find(item, search) then
									v.Visible = true
								else
									v.Visible = false
								end
							elseif v.Name == "TextBox" then
								local item = string.lower(v.Container.TextInput.Text)
								if string.find(item, search) then
									v.Visible = true
								else
									v.Visible = false
								end
							elseif v.Name == "Keybind" then
								local item = string.lower(v.Container.Title.Text)
								if string.find(item, search) then
									v.Visible = true
								else
									v.Visible = false
								end
							elseif v.Name == "Toggle" then
								local item = string.lower(v.Title.Text)
								if string.find(item, search) then
									v.Visible = true
								else
									v.Visible = false
								end
							end
						else
							v.Visible = true
						end
					end
				end
			end

			SearchBox.Changed:Connect(UpdateResults)

			local size = 0
			SectionContainer.ChildAdded:Connect(function(me)
				if me:IsA("Frame") and me.Name == "Toggle"  then
					size = size + 43
				elseif me:IsA("Frame") and me.Name == "Button" then
					size = size + 43 
				elseif me:IsA("Frame") and me.Name == "Label" then
					size = size + 31  -- ADDING 1 TO MAKE SURE FRAME IS BIGGER
				elseif me:IsA("Frame") and me.Name == "TextBox" then
					size = size + 37
				elseif me:IsA("Frame") and me.Name == "Keybind" then
					size = size + 31
				elseif me:IsA("Frame") and me.Name == "Slider" then
					size = size + 47
				elseif me:IsA("Frame") and me.Name == "ColorPicker" then
					size = size + 47
				end
				Section.Size = UDim2.new(1,0,0,size)
				--[[for i,v in pairs(SectionContainer:GetChildren()) do
					if v:IsA("Frame") and v.Name == "Toggle" then
						print(v.Name)
						size = size + 46
					elseif v:IsA("Frame") and v.Name == "Button" then
						print(v.Name)
						size = size + 46
					elseif v:IsA("Frame") and v.Name == "Label" then
						print(v.Name)
						size = size + 46
					elseif v:IsA("Frame") and v.Name == "Slider" then
						print(v.Name)
						size = size + 46
					elseif v:IsA("Frame") and v.Name == "TextBox" then
						print(v.Name)
						size = size + 46
					elseif v:IsA("Frame") and v.Name == "Keybind" then
						print(v.Name)
						size = size + 46
					end
					Section.Size = UDim2.new(1,0,0,size)
				end]]
			end)

			local PageButton = Instance.new("TextButton")
			PageButton.Name = "PageButton"
			PageButton.Parent = Tabs
			PageButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			PageButton.BackgroundTransparency = 1.000
			PageButton.Size = UDim2.new(1, -14, 0, 20)
			PageButton.Font = Enum.Font.Gotham
			PageButton.Text = name
			PageButton.TextColor3 = Color3.fromRGB(255, 255, 255)
			PageButton.TextSize = 12.000
			PageButton.TextTransparency = 0.5
			PageButton.TextXAlignment = Enum.TextXAlignment.Left

			PageButton.MouseButton1Down:Connect(function()
				if Indicator.Visible == false then
					Indicator.Visible = true
				end
				TS:Create(Indicator, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
				wait()
				TS:Create(Indicator, TweenInfo.new(0.5), {BackgroundTransparency = 0}):Play()
				for i, v in next, Tabs:GetChildren() do
					if v:IsA("TextButton") and v.Name == "PageButton" then
						TS:Create(v, TweenInfo.new(0.5), {TextTransparency = 0.5}):Play()
					end
				end
				wait()
				TS:Create(PageButton, TweenInfo.new(0.5), {TextTransparency = 0}):Play()
				Indicator.Parent = PageButton

				for i,v in pairs(Window:GetChildren()) do
					if v:IsA("ScrollingFrame") and v.Name ~= "Tabs" and v.Name ~= "TitleBar" and v.Name ~= "UICorner" then
						v.Visible = false
					end
				end

				Page.Visible = true
			end)

			local pagebuttons = {}

			function pagebuttons:CreateButton(name, desc, callback)
				name = name or "Button"
				desc = desc or "Description"
				callback = callback or function() end
				local UpdateButton = {}
				local Button = Instance.new("Frame")
				local UICorner = Instance.new("UICorner")
				local Title = Instance.new("TextLabel")
				local Description = Instance.new("TextLabel")
				local Caller = Instance.new("TextButton")
				local Ripple = Instanc
